library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use ieee.std_logic_signed.all;
-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity ALU is
    Port ( a : in STD_LOGIC_VECTOR (31 downto 0);
           b : in STD_LOGIC_VECTOR (31 downto 0);
           sel : in STD_LOGIC_VECTOR (2 downto 0);
           result : out STD_LOGIC_VECTOR (31 downto 0);
           zero : out STD_LOGIC);
end ALU;

architecture Behavioral of ALU is
    signal aux: std_logic_vector (31 downto 0);
begin
    process(sel,a,b)
    begin
        case (sel) is
            when "000" => aux <= a and b;
            when "001" => aux <= a or b;
            when "010" => aux <= a + b;
            when "110" => aux <= a - b;
            when "111" => 
                if (a<b) then
                    aux<=x"00000001";
                else
                    aux<=x"00000000";
                end if;
            when "100" => aux <= b(15 downto 0)&x"0000";
            when others =>aux <=x"00000000";
        end case;
        if aux=0 then
            zero <= '1';
           else
            zero <= '0';
        end if;
        result<=aux;
        
    end process;

end Behavioral;
